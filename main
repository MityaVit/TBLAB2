using System;
using System.Collections.Generic;
using System.Security.AccessControl;

// Определение интерфейса
interface IProduct
{
    void Display();
}

// Определение конкретных продуктов
class Product : IProduct
{
    private List<string> ingredients;

    public Product()
    {
        ingredients = new List<string>();
    }

    public void AddIngredient(string ingredient)
    {
        ingredients.Add(ingredient);
    }

    public void Display()
    {
        Console.WriteLine("Вы выбрали следующие ингредиенты:");
        foreach (string ingredient in ingredients)
        {
            Console.WriteLine(ingredient);
        }
    }
}

// Определение абстрактного класса создателя
abstract class ProductCreator
{
    public abstract Product CreateProduct();
}

// Определение классов concrete creator
class CustomBurgerCreator : ProductCreator
{
    private List<string> breads = new List<string>() { "Белая булочка", "Пшеничная булочка", "Диетическая булочка", "Ржаная булочка" };
    private List<string> meats = new List<string> { "Ветчина", "Говядина", "Куриный бифштекс" };
    private List<string> veggies = new List<string> { "Редис", "Томат", "Огурец", "Картошка фри" };
    private List<string> sauces = new List<string> { "1000 островов", "Острый африканский", "ПВА" };

    public override Product CreateProduct()
    {
        Product burger = new Product();
        bool addingIngredients = true;

        while (addingIngredients)
        {
            Console.WriteLine("Выберите ингредиенты для бургера:");
            Console.WriteLine("1. Булочки");
            Console.WriteLine("2. Мясо");
            Console.WriteLine("3. Овощи");
            Console.WriteLine("4. Соусы");
            Console.WriteLine("5. Завершить");
            string input = Console.ReadLine();
            if (int.TryParse(input, out int choice))
            {
                switch (choice)
                {
                    case 1:
                        Console.WriteLine("Пожалуйста, выберите тип булочки:");
                        for (int i = 0; i < breads.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {breads[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int breadChoice) && breadChoice >= 1 && breadChoice <= breads.Count)
                        {
                            burger.AddIngredient(breads[breadChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;

                    case 2:
                        Console.WriteLine("Пожалуйста, выберите тип мяса:");
                        for (int i = 0; i < meats.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {meats[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int meatChoice) && meatChoice >= 1 && meatChoice <= meats.Count)
                        {
                            burger.AddIngredient(meats[meatChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;

                    case 3:
                        Console.WriteLine("Пожалуйста, выберите тип овоща:");
                        for (int i = 0; i < veggies.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {veggies[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int veggieChoice) && veggieChoice >= 1 && veggieChoice <= veggies.Count)
                        {
                            burger.AddIngredient(veggies[veggieChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;

                    case 4:
                        Console.WriteLine("Пожалуйста, выберите тип соуса:");
                        for (int i = 0; i < sauces.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {sauces[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int sauceChoice) && sauceChoice >= 1 && sauceChoice <= sauces.Count)
                        {
                            burger.AddIngredient(sauces[sauceChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор соуса");
                        }
                        break;

                    case 5:
                        addingIngredients = false;
                        break;

                    default:
                        Console.WriteLine("Некорректный выбор");
                        break;

                }
            }
            else
            {
                Console.WriteLine("Так не пойдёт");
            }
        }
        return burger;
    }
}





    class CustomSandwichCreator : ProductCreator
{
    private List<string> breads = new List<string> { "Белый хлеб", "Пшеничный хлеб", "Хлеб на закваске", "Ржаной хлеб" };
    private List<string> meats = new List<string> { "Ветчина", "Индейка", "Ростбиф", "Салями" };
    private List<string> cheeses = new List<string> { "Чеддер", "Грюйер", "Проволоне", "Тильзитер" };
    private List<string> vegetables = new List<string> { "Салат-латук", "Томат", "Лук", "Огурец" };
    private List<string> sauces = new List<string> { "Майонез", "Горчица", "Кетчуп", "Ранчо" };

    public override Product CreateProduct()
    {
        Product sandwich = new Product();
        bool addingIngredients = true;

        while (addingIngredients)
        {
            Console.WriteLine("Выберите ингредиенты для сэндвича:");
            Console.WriteLine("1. Хлеб");
            Console.WriteLine("2. Мясо");
            Console.WriteLine("3. Сыр");
            Console.WriteLine("4. Овощи");
            Console.WriteLine("5. Соусы");
            Console.WriteLine("6. Завершить");

            string input = Console.ReadLine();
            if (int.TryParse(input, out int choice))
            {
                switch (choice)
                {
                    case 1:
                        Console.WriteLine("Пожалуйста, выберите тип хлеба:");
                        for (int i = 0; i < breads.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {breads[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int breadChoice) && breadChoice >= 1 && breadChoice <= breads.Count)
                        {
                            sandwich.AddIngredient(breads[breadChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;
                    case 2:
                        Console.WriteLine("Пожалуйста, выберите тип мяса:");
                        for (int i = 0; i < meats.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {meats[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int meatChoice) && meatChoice >= 1 && meatChoice <= meats.Count)
                        {
                            sandwich.AddIngredient(meats[meatChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;
                    case 3:
                        Console.WriteLine("Пожалуйста, выберите тип сыра:");
                        for (int i = 0; i < cheeses.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {cheeses[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int cheeseChoice) && cheeseChoice <= cheeses.Count)
                        {
                            sandwich.AddIngredient(cheeses[cheeseChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;
                    case 4:
                        Console.WriteLine("Пожалуйста, выберите тип овоща:");
                        for (int i = 0; i < vegetables.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {vegetables[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int veggieChoice) && veggieChoice >= 1 && veggieChoice <= vegetables.Count)
                        {
                            sandwich.AddIngredient(vegetables[veggieChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор");
                        }
                        break;
                    case 5:
                        Console.WriteLine("Пожалуйста, выберите тип соуса:");
                        for (int i = 0; i < sauces.Count; i++)
                        {
                            Console.WriteLine($"{i + 1}. {sauces[i]}");
                        }
                        input = Console.ReadLine();
                        if (int.TryParse(input, out int sauceChoice) && sauceChoice >= 1 && sauceChoice <= sauces.Count)
                        {
                            sandwich.AddIngredient(sauces[sauceChoice - 1]);
                        }
                        else
                        {
                            Console.WriteLine("Некорректный выбор соуса");
                        }
                        break;
                    case 6:
                        addingIngredients = false;
                        break;
                    default:
                        Console.WriteLine("Некорректный выбор");
                        break;
                }
            }
            else
            {
                Console.WriteLine("Так не пойдёт");
            }
        }
        return sandwich;
    }
}

class Client
{
    private ProductCreator productCreator;
    public Client(ProductCreator productCreator)
    {
        this.productCreator = productCreator;
    }

    public void ArrangeProduct()
    {
        Product food = productCreator.CreateProduct();
        food.Display();

        bool confirm = false;
        while (!confirm)
        {
            Console.WriteLine("Нажмите 1, чтобы подтвердить заказ. Нажмите 2, чтобы отменить.");
            string input = Console.ReadLine();
            if (int.TryParse(input, out int choice))
            {
                switch (choice)
                {
                    case 1:
                        Console.WriteLine("Спасибо за заказ!");
                        confirm = true;
                        break;
                    case 2:
                        Console.WriteLine("Отмена заказа");
                        return;
                    default:
                        Console.WriteLine("Некорректный выбор");
                        break;
                }
            }
            else
            {
                Console.WriteLine("Так не пойдёт");
            }
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Client sandwichClient = new Client(new CustomSandwichCreator());
        Client burgerClient = new Client(new CustomBurgerCreator());
        Console.WriteLine("Если заказываем сэндвич - 1, если бургер - 2");
        string userinput = Console.ReadLine();
        if (int.TryParse(userinput, out int userchoice)){
            switch (userchoice)
            {
                case 1:
                    sandwichClient.ArrangeProduct();
                    break;
                case 2:
                    burgerClient.ArrangeProduct();
                    break;
            }
        }
        else
        {
            Console.WriteLine("Так не пойдёт!");
        }
    }
}
